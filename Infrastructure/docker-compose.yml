services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - ../.env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-admin}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - athena

  redis:
    image: redis/redis-stack-server:7.2.0-v17
    ports:
      - "6379:6379"
    env_file:
      - ../.env
    volumes:
      - redis_data:/data
    networks:
      - athena

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    env_file:
      - ../.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-athena}
      POSTGRES_USER: ${POSTGRES_USER:-athena}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-athena}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init-vector.sql:/docker-entrypoint-initdb.d/init-vector.sql:ro
      - ./sql/init-postgis.sql:/docker-entrypoint-initdb.d/init-postgis.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U athena -d athena"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - athena

  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    env_file:
      - ../.env
    environment:
      MONGO_INITDB_DATABASE: sensitive
    volumes:
      - mongo_data:/data/db
      - ./mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - athena


  # polymetis-public:
  #   build: ../polymetis
  #   command: ["bash", "-c", "celery -A polymetis.celery worker -Q public -n public_worker@%h --concurrency=1"]
  #   volumes:
  #     - ../polymetis:/app
  #   depends_on:
  #     - rabbitmq
  #     - redis
  #     - postgres
  #   env_file:
  #     - ../.env
  #   environment:
  #     - CELERY_BROKER_URL=${CELERY_BROKER_URL:-amqp://admin:admin@rabbitmq:5672//}
  #     - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-rpc://}
  #     - REDIS_HOST=${REDIS_HOST:-redis}
  #     - REDIS_PORT=${REDIS_PORT:-6379}
  #     - DATABASE_URL=${DATABASE_URL:-postgresql+psycopg://athena:athena@postgres:5432/athena}
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #   networks:
  #     - athena

  polymetis-sensitive:
    build: ../polymetis
    command: ["bash", "-lc", "chmod +x scripts/entrypoint_worker.sh || true && scripts/entrypoint_worker.sh"]
    volumes:
      - ../polymetis:/app
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - mongodb
    env_file:
      - ../.env
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-amqp://admin:admin@rabbitmq:5672//}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-rpc://}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - DATABASE_URL=${DATABASE_URL:-postgresql+psycopg3://athena:athena@postgres:5432/athena}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongodb:27017}
    networks:
      - athena

  aegis-worker:
    build: ../aegis
    command: ["bash", "-lc", "chmod +x scripts/entrypoint_worker.sh || true && scripts/entrypoint_worker.sh"]
    volumes:
      - ../aegis:/app
      - hf_cache:/hf-cache
    depends_on:
      - rabbitmq
      - redis
      - postgres
    env_file:
      - ../.env
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-amqp://admin:admin@rabbitmq:5672//}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-rpc://}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - DATABASE_URL=${DATABASE_URL:-postgresql+psycopg://athena:athena@postgres:5432/athena}
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS:-/app/api/athena-5b322.json}
      - HF_HOME=/hf-cache
    networks:
      - athena
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  aegis:
    build: ../aegis
    command: ["bash", "-lc", "chmod +x scripts/entrypoint_web.sh || true && scripts/entrypoint_web.sh"]
    volumes:
      - ../aegis:/app
      # web does not use GPU or HF cache
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - aegis-worker
    env_file:
      - ../.env
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-amqp://admin:admin@rabbitmq:5672//}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-rpc://}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - DATABASE_URL=${DATABASE_URL:-postgresql+psycopg://athena:athena@postgres:5432/athena}
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS:-/app/api/athena-5b322.json}
      # no HF cache for web
    networks:
      - athena

volumes:
  rabbitmq_data:
  redis_data:
  postgres_data:
  mongo_data:
  hf_cache:

networks:
  athena:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/24