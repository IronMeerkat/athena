services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-admin}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - athena

  redis:
    image: redis/redis-stack-server:7.2.0-v17
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - athena

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-athena}
      POSTGRES_USER: ${POSTGRES_USER:-athena}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-athena}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init-vector.sql:/docker-entrypoint-initdb.d/init-vector.sql:ro
      - ./sql/init-postgis.sql:/docker-entrypoint-initdb.d/init-postgis.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U athena -d athena"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - athena

  # polymetis:
  #   build: ~/athena/polymetis
  #   command: ["bash", "-lc", "chmod +x scripts/entrypoint_worker.sh || true && scripts/entrypoint_worker.sh"]
  #   volumes:
  #     - ~/athena/polymetis:/app
  #     - ~/athena/athena-utils:/opt/athena-utils
  #     - hf_cache:/hf-cache
  #   depends_on:
  #     - rabbitmq
  #     - redis
  #     - postgres
  #   environment:
  #     - HF_HOME=/hf-cache
  #   networks:
  #     - athena
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: all
  #             capabilities: [gpu]

  # aegis:
  #   build: ~/athena/aegis
  #   command: ["bash", "-lc", "chmod +x scripts/entrypoint_web.sh || true && scripts/entrypoint_web.sh"]
  #   volumes:
  #     - ~/athena/aegis:/app
  #     - ~/athena/athena-utils:/opt/athena-utils
  #     # web does not use GPU or HF cache
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - rabbitmq
  #     - redis
  #     - postgres
  #     - polymetis
  #   networks:
  #     - athena

volumes:
  rabbitmq_data:
  redis_data:
  postgres_data:
  mongo_data:
  hf_cache:

networks:
  athena:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/24