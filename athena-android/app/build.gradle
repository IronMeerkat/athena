plugins {
  id "com.android.application"
  id "org.jetbrains.kotlin.android"
  id "org.jetbrains.kotlin.plugin.compose"
  id "com.google.devtools.ksp"
  id("skydoves.android.hilt")
  id("skydoves.spotless")
  alias(libs.plugins.kotlin.serialization)
  alias(libs.plugins.baselineprofile)
}


android {
    // Correct the application namespace and target the latest SDK.
    namespace "com.ironmeerkat.athena"
    compileSdk 36

    defaultConfig {
        // Use the corrected package name for both the namespace and applicationId
        applicationId "com.ironmeerkat.athena"
        minSdk 26
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
        useSupportLibrary = true
    }

        // If you add a google-services.json file in the app module, the
        // Google Services Gradle plugin will automatically configure
        // Firebase for you. Do not include the file here as per instructions.
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        compose true
    }


    packagingOptions {
        resources {
            excludes += ["META-INF/AL2.0", "META-INF/LGPL2.1"]
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'

    // Jetpack Compose
    implementation platform('androidx.compose:compose-bom:2023.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3:1.1.2'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    implementation 'androidx.activity:activity-compose:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'


      // Room runtime + Kotlin extensions
    implementation "androidx.room:room-runtime:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"

    // KSP codegen for Room
    ksp "androidx.room:room-compiler:2.6.1"

    // Retrofit and OkHttp for DRF integrations
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'
    implementation 'com.squareup.okhttp3:okhttp-sse:4.11.0'

    // JSON parser
    implementation 'com.squareup.moshi:moshi:1.15.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.15.0'
    ksp 'com.squareup.moshi:moshi-kotlin-codegen:1.15.0'

    // Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

  implementation(projects.core.designsystem)
  implementation(projects.core.navigation)

  // Features
  implementation(projects.feature.channels)
  implementation(projects.feature.messages)

  // Compose
  implementation(libs.androidx.activity.compose)
  implementation(libs.androidx.navigation.compose)
  implementation(libs.androidx.compose.ui)
  implementation(libs.androidx.compose.ui.tooling.preview)
  implementation(libs.androidx.compose.runtime)
  implementation(libs.androidx.compose.foundation)
  implementation(libs.androidx.compose.foundation.layout)
  implementation(libs.androidx.lifecycle.runtimeCompose)
  implementation(libs.androidx.lifecycle.viewModelCompose)
  implementation(libs.androidx.compose.material)
  implementation(libs.androidx.compose.material.iconsExtended)

  // Compose Image Loading
  implementation(libs.landscapist.glide)
  implementation(libs.landscapist.animation)
  implementation(libs.landscapist.placeholder)

  // Coroutines
  implementation(libs.kotlinx.coroutines.android)

  // Network
  implementation(libs.sandwich)
  implementation(libs.okhttp.logging)

  // Serialization
  implementation(libs.kotlinx.serialization.json)

  // Logger
  implementation(libs.stream.log)

  // Baseline Profiles
  implementation(libs.androidx.profileinstaller)
  baselineProfile(project(":baselineprofile"))
}